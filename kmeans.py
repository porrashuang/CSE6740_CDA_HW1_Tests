OK_FORMAT = True

test = {   'name': 'kmeans',
    'points': None,
    'suites': [   {   'cases': [   {   'code': '>>> X = np.array([[0.94681792, 0.0376918, 0.29416632, 0.37310751, 0.34889047], [0.75900324, 0.35810446, 0.95657881, 0.99499263, 0.31681887], '
                                               '[0.50880075, 0.55770584, 0.57940283, 0.37420899, 0.1659935], [0.05456054, 0.10634867, 0.90129124, 0.28037501, 0.07682298], [0.6235297, 0.07530715, '
                                               '0.07005294, 0.62157051, 0.59139524], [0.04147729, 0.46047783, 0.43576831, 0.54668913, 0.73784471], [0.28280005, 0.43278028, 0.79274268, 0.92255639, '
                                               '0.89132297], [0.47763095, 0.5208658, 0.52910544, 0.86871557, 0.83993951], [0.31153253, 0.16284969, 0.37897456, 0.28840638, 0.95078072], [0.26591568, '
                                               '0.18120668, 0.89947906, 0.0864786, 0.26026605], [0.43911119, 0.59510738, 0.3276729, 0.496234, 0.19883119], [0.57427412, 0.40781681, 0.84925969, '
                                               '0.41573413, 0.44381542], [0.59217499, 0.12317, 0.15679518, 0.79023775, 0.27341878], [0.68469693, 0.09742697, 0.82184666, 0.98822811, 0.37369095], '
                                               '[0.5055301, 0.44271198, 0.89418775, 0.00993404, 0.65345932], [0.65236827, 0.38238501, 0.21933364, 0.23968268, 0.80046412], [0.0661031, 0.56382415, '
                                               '0.3068406, 0.26524781, 0.50573767], [0.89786151, 0.61809192, 0.78861063, 0.60068378, 0.69771578], [0.43240765, 0.92598164, 0.50193902, 0.55177467, '
                                               '0.5249655], [0.31618902, 0.23123844, 0.07383496, 0.71817498, 0.28927526]])\n'
                                               '>>> init_centroids = np.array([[0.88521019, 0.78593411, 0.68427092, 0.06524684, 0.03950722], [0.13041094, 0.5813911, 0.53638685, 0.94269083, '
                                               '0.69475964], [0.29397262, 0.16149629, 0.84953324, 0.4596241, 0.6534695], [0.56514361, 0.10745635, 0.05705838, 0.37701819, 0.3615503], [0.67379811, '
                                               '0.63220041, 0.96894093, 0.8580995, 0.49658253]])\n'
                                               '>>> expected = (np.array([[0.47395597, 0.57640661, 0.45353787, 0.4352215, 0.18241234], [0.2686586, 0.5111299, 0.4908951, 0.57389832, 0.74176518], '
                                               '[0.35007011, 0.28452104, 0.88605444, 0.19813044, 0.35859094], [0.62621598, 0.16995848, 0.16283661, 0.54855469, 0.46068877], [0.78052056, 0.35787445, '
                                               '0.8556787, 0.86130151, 0.46274187]]), np.array([3, 4, 0, 2, 3, 1, 1, 1, 1, 2, 0, 2, 3, 4, 2, 3, 1, 4, 1, 3]))\n'
                                               '>>> centroids, labels = myKmeans(X, 5, init_centroids=init_centroids)\n'
                                               '>>> assert np.allclose(centroids, expected[0])\n'
                                               '>>> assert np.array_equal(labels, expected[1])\n',
                                       'hidden': False,
                                       'locked': False,
                                       'points': 1.2},
                                   {   'code': '>>> ari_score, ari_score_random, centroids, cluster_to_label = test_MNIST()\n>>> assert ari_score > ari_score_random + 0.3\n',
                                       'hidden': False,
                                       'locked': False,
                                       'points': 1.8}],
                      'scored': True,
                      'setup': '',
                      'teardown': '',
                      'type': 'doctest'}]}
