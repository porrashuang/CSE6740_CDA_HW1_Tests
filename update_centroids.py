OK_FORMAT = True

test = {   'name': 'update_centroids',
    'points': None,
    'suites': [   {   'cases': [   {   'code': '>>> list_of_points = np.array([[-1.01714716, 0.95954521, 1.20493919, 0.34804443], [-1.36639346, -0.38664658, -1.02232584, -1.05902604], [1.13659605, '
                                               '-2.47109085, -0.83996912, -0.24579457], [-1.48090019, -1.47491857, -0.6221167, 1.79055006], [-0.31237952, 0.73762417, 0.39042814, -1.1308523], '
                                               '[-0.83095884, -1.73002213, -0.01361636, -0.32652741], [-0.78645408, 1.98342914, 0.31944446, -0.41656898], [-1.06190687, 0.34481172, -0.70359847, '
                                               '-0.27828666], [-2.01157677, 2.93965872, 0.32334723, -0.1659333], [-0.56669023, -0.06943413, 1.46053764, 0.01723844]])\n'
                                               '>>> centroids_1 = np.array([[0.1839742, -0.45809263, -1.91311585, -1.48341843], [-0.71767545, 1.2309971, -1.00348728, -0.38204247]])\n'
                                               '>>> assignment_1 = update_assignments(list_of_points, centroids_1)\n'
                                               '>>> expected = np.array([[-0.35358541, -1.529253186, -0.62530377, -0.543782673], [-1.03386497, 0.774388037, 0.33899735, 0.023455955]])\n'
                                               '>>> received = update_centroids(list_of_points, assignment_1)\n'
                                               '>>> assert np.allclose(received, expected)\n',
                                       'hidden': False,
                                       'locked': False,
                                       'points': 1.2},
                                   {   'code': '>>> list_of_points = np.array([[-1.01714716, 0.95954521, 1.20493919, 0.34804443], [-1.36639346, -0.38664658, -1.02232584, -1.05902604], [1.13659605, '
                                               '-2.47109085, -0.83996912, -0.24579457], [-1.48090019, -1.47491857, -0.6221167, 1.79055006], [-0.31237952, 0.73762417, 0.39042814, -1.1308523], '
                                               '[-0.83095884, -1.73002213, -0.01361636, -0.32652741], [-0.78645408, 1.98342914, 0.31944446, -0.41656898], [-1.06190687, 0.34481172, -0.70359847, '
                                               '-0.27828666], [-2.01157677, 2.93965872, 0.32334723, -0.1659333], [-0.56669023, -0.06943413, 1.46053764, 0.01723844]])\n'
                                               '>>> centroids_2 = np.array([[0.1839742, -0.45809263, -1.91311585, -1.48341843], [10, 10, 10, 10]])\n'
                                               '>>> assignment_2 = update_assignments(list_of_points, centroids_2)\n'
                                               '>>> expected_2 = np.array([[-0.8297811, 0.08329567, 0.04970701, -0.146715632]])\n'
                                               '>>> received_2 = update_centroids(list_of_points, assignment_2)\n'
                                               '>>> assert np.allclose(received_2, expected_2)\n',
                                       'hidden': False,
                                       'locked': False,
                                       'points': 1.2}],
                      'scored': True,
                      'setup': '',
                      'teardown': '',
                      'type': 'doctest'}]}
